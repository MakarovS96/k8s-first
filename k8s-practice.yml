apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-sf
spec:
  selector:
    matchLabels:
      app: nginx

  replicas: 3

  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.21.1-alpine
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 80
        volumeMounts:
        - name: config
          mountPath: "/etc/nginx/"
          readOnly: true
        env:
        - name: NGINX_USERNAME
          value: user1
        - name: NGINX_PASSWORD
          valueFrom:
            secretKeyRef:
              name: auth-basic
              key: user1
        command: ['sh', '-c', 'apk add openssl && mkdir /etc/conf/ && echo $NGINX_USERNAME:$(echo $NGINX_PASSWORD | openssl passwd -apr1 -stdin) >> /etc/conf/.htpasswd && nginx && tail -f /var/log/nginx/access.log']

      volumes:
      - name: config
        configMap:
          name: nginx-conf
          items:
          - key: nginx.conf
            path: nginx.conf

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    worker_processes  1;
    events {
      worker_connections  10240;
    }
    http {
      server {
          auth_basic on;
          auth_basic_user_file /etc/conf/.htpasswd;
          listen       80;
          server_name  localhost;
          location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }
      }
    }

---
apiVersion: v1
kind: Service
metadata:
  name: sf-webserver
spec:
  selector:
    app: nginx
  ports:
  - port: 80
    targetPort: 80

---
apiVersion: v1
kind: Secret
metadata:
  name: auth-basic
type: Opaque
data:
  user1: cGFzc3dvcmQxCg==
